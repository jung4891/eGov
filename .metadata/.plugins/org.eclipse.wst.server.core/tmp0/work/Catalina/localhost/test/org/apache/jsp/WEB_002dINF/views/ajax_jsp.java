/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-08-10 09:40:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Workspace/eGov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/test/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1627914574923L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("  \n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title>Ajax</title>\n");
      out.write("\t<script src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"></script>  \n");
      out.write("\t<!-- c:url 안쓰고 그냥 하드코딩으로 입력은 어떻게 하지??  -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<h1>Ajax 연습</h1>\n");
      out.write("\t\n");
      out.write("\t<button onclick=\"location.href='/test'\">메인으로</button> <br><br><br>\n");
      out.write("\t\n");
      out.write("\t<!-- \n");
      out.write("\t\t\tAJAX(Asynchronous JavaScript and XML) \n");
      out.write("\t\t\tAJAX는 단순히 텍스트값만 넘길수도 있고, form을 넘길수도 있고, 파일 업로드와 같이 웹개발에서 중요한 역할을 담당한다.\n");
      out.write("\t\t\tAJAX만 잘 알아도 개발하는데 시간단축이 된다.\n");
      out.write("\t\t\tAJAX는 비동기식 방법으로 데이터에 접근하는 것이다. 쉽게 말하면 그냥 브라우저에서 새로고침하지 않고도 데이터값을 변경할수 있는 것이다.\n");
      out.write("\t\t\t대표적으로 AJAX가 사용된 사례는 각종 포털사이트의 인기검색어 혹은 연관검색어이다.\n");
      out.write("\t -->\n");
      out.write("\t \n");
      out.write("\t 1) Ajax의 가장 기본형태:   \n");
      out.write("\t <button id=\"btn1\">simpleAJAX</button>\n");
      out.write("\t <div id=\"result\"></div>\n");
      out.write("\t <div id=\"testRes\"></div> <br><br>\n");
      out.write("\t \n");
      out.write("\t 2) 입력한 값들로 주고받기:\n");
      out.write("\t <button id=\"btn2\">serialize</button>\n");
      out.write("\t <form id=\"frm\">\n");
      out.write("\t    name : <input type=\"text\" name=\"name\" id=\"name\"><br>\n");
      out.write("\t    age : <input type=\"text\" name=\"age\" id=\"age\">\n");
      out.write("\t </form>\n");
      out.write("\t <div id=\"result2\"></div>\n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("</body>\n");
      out.write("</html> \n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("\t// 2) 입력한 data를 전송해서 필요한 로직들을 처리하고 값을 return 받음.\n");
      out.write("\t$('#btn2').on('click', function(){\n");
      out.write("\t\t\talert($(\"#frm\").serialize());\n");
      out.write("\t\t\t// alert($(\"#frm\"));\t\t\t\t\t\t\t\t// [object Object]\n");
      out.write("\t    alert($(\"#name\").val())\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t        url: \"serialize\",\n");
      out.write("\t        type: \"POST\",\n");
      out.write("\t        data: $(\"#frm\").serialize(),\n");
      out.write("\t        success: function(data){\n");
      out.write("\t            $('#result2').text(data);\n");
      out.write("\t        },\n");
      out.write("\t        error: function(){\n");
      out.write("\t            alert(\"serialize err\");\n");
      out.write("\t        }\n");
      out.write("\t    });\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t// 1) Ajax의 기본형태\n");
      out.write("\t// data를 전송해서 필요한 로직들을 처리하고 값을 return 받음.\n");
      out.write("\t$('#btn1').on('click', function(){\n");
      out.write("\t\tvar form = {\n");
      out.write("\t\t\t\tname: \"hyukjung\",\n");
      out.write("\t\t\t\tage: 32,\n");
      out.write("\t\t\t\ttest: 1\n");
      out.write("\t\t}\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"requestObject\",\n");
      out.write("            type: \"POST\",\n");
      out.write("            data: form,\t\t\t\t\t\t\t\t\t\t\t// 위 form을 보내면 컨트롤러에서  person VO가 받아서 name과 age에 들어가게됨.\n");
      out.write("            success: function(data){\t\t\t\t// data는 컨트롤러에서 return된 String값임.\n");
      out.write("                $('#result').text(data);\t\t// hyukjung 32 / test: 1\n");
      out.write("                $('#testRes').text(\"test\");\n");
      out.write("            },\n");
      out.write("            error: function(){\n");
      out.write("                alert(\"simpleWithObject err\");\n");
      out.write("            }\n");
      out.write("    });\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/ajax.jsp(8,14) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/js/jquery-3.5.1.min.js");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
